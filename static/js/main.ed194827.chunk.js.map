{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","NONE","sortType","setSortType","isReversed","setIsReversed","valueMinLensthGood","setValue","isSortAlphabet","setIsSortAlphabet","isSortLength","setIsSortLength","resultGoods","goods","sortBy","isRevers","valueSelect","visibleGoods","filter","good","length","ALPABET","sort","a","b","localeCompare","LENGTH","reverse","getReorderedGoods","className","type","onClick","cn","map","name","value","onChange","event","Number","target","position","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAeE,IC/BFA,ED+BQE,EAAuB,WAClC,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCL,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAuCP,mBAAS,GAAhD,mBAAOQ,EAAP,KAA2BC,EAA3B,KACA,EAA4CT,oBAAS,GAArD,mBAAOU,EAAP,KAAuBC,EAAvB,KACA,EAAwCX,oBAAS,GAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KA2DMC,EAzDoB,SACxBC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAeJ,EAClBK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUJ,KAcjC,OAZIF,IAAWnB,EAAS0B,SACtBJ,EAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,MAG1CT,IAAWnB,EAAS+B,QACtBT,EAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEJ,OAASG,EAAEH,UAGtCL,GACHE,EAAaU,UAGRV,EAoCWW,CAClBhC,EACAM,EACAE,EACAE,GAGF,OACE,sBAAKuB,UAAU,MAAf,WACI9B,GACA,wBACE+B,KAAK,SACLD,UAAU,oBACVE,QAAS,WA7Cf/B,GAAa,IA0CT,mBASDD,GAEC,qCACE,sBAAK8B,UAAU,iBAAf,UACE,wBACEC,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,WAAYxB,IAEhBuB,QAAS,kBA1DnB5B,EAAYR,EAAS0B,SACrBV,GAAgB,QAChBF,GAAoBD,IAiDZ,iCAYA,wBACEsB,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,WAAYtB,IAEhBqB,QAAS,kBAhEnB5B,EAAYR,EAAS+B,QACrBjB,GAAkB,QAClBE,GAAiBD,IAuDT,4BAYA,wBACEoB,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,WAAY5B,IAEhB2B,QAAS,WAtEnB1B,GAAeD,IA+DP,qBAYA,wBACE0B,KAAK,SACLD,UAAU,oBACVE,QAAS,kBA1EnB5B,EAAYR,EAASM,MACrBI,GAAc,GACdI,GAAkB,GAClBE,GAAgB,QAChBJ,EAAS,IAmED,sBASF,oBAAIsB,UAAU,QAAd,SACIjB,EAAYqB,KAAI,SAAAd,GAAI,OACpB,oBAAIU,UAAU,cAAd,SAAwCV,GAAPA,QAGrC,sBAAMU,UAAU,cAAhB,qCACA,wBACEK,KAAK,SACLC,MAAO7B,EACP8B,SAlFsB,SAACC,GAC/B9B,EAAS+B,OAAOD,EAAME,OAAOJ,SA8EvB,SA3EgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAgF1CF,KAAI,SAAAO,GAAQ,OAC5B,wBAAuBL,MAAOK,EAA9B,SAAyCA,GAA5BA,gB,SChLtB7C,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAML8C,IAASC,OACP,cAAC,EAAD,CACE3C,WAAW,EACXK,YAAY,EACZF,SAAUP,EAASM,KACnBK,mBAAoB,EACpBE,gBAAgB,EAChBE,cAAc,IAEhBiC,SAASC,eAAe,W","file":"static/js/main.ed194827.chunk.js","sourcesContent":["import React, { useState, ChangeEvent } from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.min.css';\nimport cn from 'classnames';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  isSortAlphabet: boolean,\n  isSortLength: boolean,\n  sortType: SortType,\n  valueMinLensthGood: number,\n};\n\nexport const App: React.FC<State> = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const [valueMinLensthGood, setValue] = useState(1);\n  const [isSortAlphabet, setIsSortAlphabet] = useState(false);\n  const [isSortLength, setIsSortLength] = useState(false);\n\n  const getReorderedGoods = (\n    goods: string[],\n    sortBy: SortType,\n    isRevers: boolean,\n    valueSelect: number,\n  ): string[] => {\n    const visibleGoods = goods\n      .filter(good => good.length >= valueSelect);\n\n    if (sortBy === SortType.ALPABET) {\n      visibleGoods.sort((a, b) => b.localeCompare(a));\n    }\n\n    if (sortBy === SortType.LENGTH) {\n      visibleGoods.sort((a, b) => b.length - a.length);\n    }\n\n    if (!isRevers) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const start = () => {\n    setIsStarted(true);\n  };\n\n  const sortByAlpabet = () => {\n    setSortType(SortType.ALPABET);\n    setIsSortLength(false);\n    setIsSortAlphabet(!(isSortAlphabet));\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n    setIsSortAlphabet(false);\n    setIsSortLength(!isSortLength);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n    setIsSortAlphabet(false);\n    setIsSortLength(false);\n    setValue(1);\n  };\n\n  const handleChangeValueLength = (event: ChangeEvent<HTMLSelectElement>) => {\n    setValue(Number(event.target.value));\n  };\n\n  const positionsSelect = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n  const resultGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n    valueMinLensthGood,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-warning\"\n          onClick={() => start()}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted\n      && (\n        <>\n          <div className=\"button-wrapper\">\n            <button\n              type=\"button\"\n              className={cn(\n                'button',\n                'is-success',\n                { 'is-light': isSortAlphabet },\n              )}\n              onClick={() => sortByAlpabet()}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={cn(\n                'button',\n                'is-success',\n                { 'is-light': isSortLength },\n              )}\n              onClick={() => sortByLength()}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={cn(\n                'button',\n                'is-success',\n                { 'is-light': isReversed },\n              )}\n              onClick={() => reverse()}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-success\"\n              onClick={() => reset()}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            { resultGoods.map(good => (\n              <li className=\"Goods__item\" key={good}>{good}</li>\n            ))}\n          </ul>\n          <span className=\"titleSelect\">Filterd by name length:</span>\n          <select\n            name=\"select\"\n            value={valueMinLensthGood}\n            onChange={handleChangeValueLength}\n          >\n            { positionsSelect.map(position => (\n              <option key={position} value={position}>{position}</option>))}\n          </select>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nReactDOM.render(\n  <App\n    isStarted={false}\n    isReversed={false}\n    sortType={SortType.NONE}\n    valueMinLensthGood={0}\n    isSortAlphabet={false}\n    isSortLength={false}\n  />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}